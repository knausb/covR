// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// baf_stats
Rcpp::IntegerMatrix baf_stats(Rcpp::StringVector calls, Rcpp::StringVector quals, Rcpp::StringVector ref, int minq);
RcppExport SEXP covR_baf_stats(SEXP callsSEXP, SEXP qualsSEXP, SEXP refSEXP, SEXP minqSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type calls(callsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type quals(qualsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type ref(refSEXP);
    Rcpp::traits::input_parameter< int >::type minq(minqSEXP);
    __result = Rcpp::wrap(baf_stats(calls, quals, ref, minq));
    return __result;
END_RCPP
}
// baf_stats_st
Rcpp::IntegerMatrix baf_stats_st(Rcpp::StringVector calls, Rcpp::StringVector quals, Rcpp::StringVector ref, int minq);
RcppExport SEXP covR_baf_stats_st(SEXP callsSEXP, SEXP qualsSEXP, SEXP refSEXP, SEXP minqSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type calls(callsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type quals(qualsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type ref(refSEXP);
    Rcpp::traits::input_parameter< int >::type minq(minqSEXP);
    __result = Rcpp::wrap(baf_stats_st(calls, quals, ref, minq));
    return __result;
END_RCPP
}
// bedify
Rcpp::List bedify(Rcpp::StringMatrix myBed, Rcpp::IntegerMatrix myData);
RcppExport SEXP covR_bedify(SEXP myBedSEXP, SEXP myDataSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::StringMatrix >::type myBed(myBedSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type myData(myDataSEXP);
    __result = Rcpp::wrap(bedify(myBed, myData));
    return __result;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP covR_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(rcpp_hello_world());
    return __result;
END_RCPP
}
// file_stats
Rcpp::IntegerVector file_stats(std::string filename, std::string sep, int nrows, int skip, int verbose);
RcppExport SEXP covR_file_stats(SEXP filenameSEXP, SEXP sepSEXP, SEXP nrowsSEXP, SEXP skipSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type sep(sepSEXP);
    Rcpp::traits::input_parameter< int >::type nrows(nrowsSEXP);
    Rcpp::traits::input_parameter< int >::type skip(skipSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    __result = Rcpp::wrap(file_stats(filename, sep, nrows, skip, verbose));
    return __result;
END_RCPP
}
// read_matrix
Rcpp::StringMatrix read_matrix(std::string filename, std::string sep, int nrows, int ncols, int skip, int verbose);
RcppExport SEXP covR_read_matrix(SEXP filenameSEXP, SEXP sepSEXP, SEXP nrowsSEXP, SEXP ncolsSEXP, SEXP skipSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type sep(sepSEXP);
    Rcpp::traits::input_parameter< int >::type nrows(nrowsSEXP);
    Rcpp::traits::input_parameter< int >::type ncols(ncolsSEXP);
    Rcpp::traits::input_parameter< int >::type skip(skipSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    __result = Rcpp::wrap(read_matrix(filename, sep, nrows, ncols, skip, verbose));
    return __result;
END_RCPP
}
// parallelVectorSum
double parallelVectorSum(Rcpp::NumericVector x);
RcppExport SEXP covR_parallelVectorSum(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(parallelVectorSum(x));
    return __result;
END_RCPP
}
// write_matrix
void write_matrix(std::string filename, Rcpp::StringMatrix mymatrix, std::string sep, int verbose);
RcppExport SEXP covR_write_matrix(SEXP filenameSEXP, SEXP mymatrixSEXP, SEXP sepSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringMatrix >::type mymatrix(mymatrixSEXP);
    Rcpp::traits::input_parameter< std::string >::type sep(sepSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    write_matrix(filename, mymatrix, sep, verbose);
    return R_NilValue;
END_RCPP
}
